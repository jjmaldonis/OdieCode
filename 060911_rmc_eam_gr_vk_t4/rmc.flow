This is the general flow of the rmc algorithm. Similar file to femsim.flow.


#Initializations:
call read_model(model_filename, comment, m, istat)
call check_model(m, istat)
call recenter_model(0.0, 0.0, 0.0, m)
call read_inputs(param_filename,temperature, max_move, cutoff_r, used_data_sets, weights, gr_e, r_e, gr_e_err, gr_n, r_n, gr_x, r_x, vk_exp, k, vk_exp_err, v_background, ntheta, nphi, npsi, scale_fac, Q, fem_algorithm, pixel_distance, total_steps, rmin_e, rmax_e, rmin_n, rmax_n, rmin_x, rmax_x, status2)
call read_eam(m)
call eam_initial(m, te1)
call scatt_power(m,used_data_sets,istat)
call gr_initialize(m,r_e,gr_e,r_n,gr_n,r_x,gr_x,used_data_sets,istat)
call gr_no_hutch(m,used_data_sets)
call fem_initialize(m, res, k, nk, ntheta, nphi, npsi, scatfact_e, istat,  square_pixel)
call fem(m, res, k, vk, v_background, scatfact_e, mpi_comm_world, istat, square_pixel)
    #This is where the majority of the initialization time is spent -> more specifically in the intensity calculations for every rotated model in this function.

#Start MC loop.
    call random_move(m,w,xx_cur,yy_cur,zz_cur,xx_new,yy_new,zz_new, max_move) until we have a legit move.
    call hutch_move_atom(m,w,xx_new, yy_new, zz_new)
    call eam_mc(m, w, xx_cur, yy_cur, zz_cur, xx_new, yy_new, zz_new, te2)
        call hutch_list_3D(m, xx_cur, yy_cur, zz_cur, eam_max_r, atoms1, istat, nlist1) (***many times***)
    call gr_hutch_mc(m,w,xx_cur,yy_cur,zz_cur,xx_new,yy_new,zz_new,used_data_sets,istat)
        call hutch_list_3D (***twice***)
    call fem_update(m, w, res, k, vk, v_background, scatfact_e, mpi_comm_world, istat, square_pixel)
        #This is a huge function. Many do loops, calls rotate_model and intensity many times.
    chi2_new = chi_square(used_data_sets,weights,gr_e, gr_e_err, gr_n, gr_x, vk_exp, vk_exp_err, gr_e_sim_new, gr_n_sim_new, gr_x_sim_new, vk, scale_fac, rmin_e, rmax_e, rmin_n, rmax_n, rmin_x, rmax_x, del_r_e, del_r_n, del_r_x, nk, chi2_gr, chi2_vk)
    #Accept or reject move. If accept:
        call accept_gr(m, used_data_sets)
        call fem_accept_move(mpi_comm_world)
    #If reject:
        call reject_position(m, w, xx_cur, yy_cur, zz_cur)
        call hutch_move_atom(m,w,xx_cur, yy_cur, zz_cur)  !update hutches.
        call reject_gr(m,used_data_sets)
        call fem_reject_move(m, mpi_comm_world)
    #Save output every 1000 steps. Lower the temp, max_move, and reset beta every 50k moves.

#Finalize by writing final data.



Notes: What is the importance of the intensity calculation?

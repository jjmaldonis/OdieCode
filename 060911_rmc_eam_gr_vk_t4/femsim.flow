This is the general flow femsim. Some things are left out if I think they are minor, and some are left out because the function name implies them or I already know they are done in the function (i.e. rotate_model rotates an individual model at an angle and recalculates some necessary things). It is also often necessary to calculate the hutch position - these calls are left out. 


call read_model(model_filename, c, m, istat)
call check_model(m, istat)
call read_inputs(...)
call fem_initialize(m, res, k, nk, ntheta, nphi, npsi, scatfac_e, istat, square_pixel)
    call init_rot(ntheta, nphi, npsi, nrot, istat) #Initializes the rotation angles array.
    call init_pix(m,npix_x, npix_y, dr, istat, pixel_square) #Initializes the pixels.
    call read_f_e #Sets FEM scattering values.
call fem(m, res, k, vk, v_background, scatfac_e, mpi_comm_world, istat, square_pixel, use_femsim)
    #For each rotation angle:
        call rotate_model(rot(i, 1), rot(i, 2), rot(i, 3), m, mrot(1), istat)
            call periodic_continue_model(3, 3, 3, min, mt, .FALSE., istat) #This seems to make the model periodic, but I'm not 100% sure.
            call model_init_hutch(mrot, istat)
                ! Initializes the hutch_array ha within the model m. It calcualtes the hutch_size (based on the model box size and the parameter ATOMS_PER_HUTCH) and the number of hutches in the array (nhutch_x, nhutch_y, and hhutch_z). It then assigns all the atoms in the current model atom position arrays xa, ya, and za to the appropriate hutches.  It does NOT check whether ha has already been initialized, so this routine should NEVER be called more than once for the same hutch_array. (Note: this is true here because the mrot model is destroyed below.)
        call intensity(mrot(1), res, pix(j, 1), pix(j, 2), k, int_i(1:nk, j, i), scatfact_e, istat, pixel_square)
        call destroy_model(mrot(1))
call write_intensities(outfile, k, istat)
call I_average(i_k)



Further notes:
The "new algorithm" is used in the functions hutch_list_pixel and hutch_list_3D.
hutch_list_3D isn't called in femsim at all.
hutch_list_pixel is called in intensity(...) but only if square_pixel is set to false in femsim.f90! Otherwise hutch_list_pixel_sq is called instead, which is a decently small function.
